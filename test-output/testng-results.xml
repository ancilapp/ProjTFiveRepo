<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-28T10:26:24 EST" name="Default suite" finished-at="2025-01-28T10:26:54 EST" duration-ms="29838">
    <groups>
    </groups>
    <test started-at="2025-01-28T10:26:24 EST" name="Default test" finished-at="2025-01-28T10:26:54 EST" duration-ms="29838">
      <class name="com.ProjTFive.testCases.RegisterTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:24 EST" name="setUp" finished-at="2025-01-28T10:26:31 EST" duration-ms="6743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="playWithExcel()[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:31 EST" name="playWithExcel" finished-at="2025-01-28T10:26:31 EST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- playWithExcel -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:31 EST" name="tearDown" finished-at="2025-01-28T10:26:31 EST" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:31 EST" name="setUp" finished-at="2025-01-28T10:26:36 EST" duration-ms="5539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyMandatoryFieldsMessages()[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:36 EST" name="verifyMandatoryFieldsMessages" finished-at="2025-01-28T10:26:37 EST" duration-ms="802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMandatoryFieldsMessages -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:37 EST" name="tearDown" finished-at="2025-01-28T10:26:38 EST" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:39 EST" name="setUp" finished-at="2025-01-28T10:26:44 EST" duration-ms="5671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordMatchingMessage(java.lang.String,java.lang.String)[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:44 EST" name="verifyPasswordMatchingMessage" data-provider="supplyTestData" finished-at="2025-01-28T10:26:46 EST" duration-ms="1444" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[DayOne]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DayTwo]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at com.ProjTFive.testCases.RegisterTest.verifyPasswordMatchingMessage(RegisterTest.java:88)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordMatchingMessage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:46 EST" name="tearDown" finished-at="2025-01-28T10:26:46 EST" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:46 EST" name="setUp" finished-at="2025-01-28T10:26:52 EST" duration-ms="5827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordMatchingMessage(java.lang.String,java.lang.String)[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:52 EST" name="verifyPasswordMatchingMessage" data-provider="supplyTestData" finished-at="2025-01-28T10:26:53 EST" duration-ms="1420" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Daythree]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DatFour]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at com.ProjTFive.testCases.RegisterTest.verifyPasswordMatchingMessage(RegisterTest.java:88)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordMatchingMessage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.ProjTFive.testCases.RegisterTest@117159c0]" started-at="2025-01-28T10:26:53 EST" name="tearDown" finished-at="2025-01-28T10:26:54 EST" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.ProjTFive.testCases.RegisterTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
